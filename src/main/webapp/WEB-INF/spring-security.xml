<beans:beans
	xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security.xsd">
	
<!-- 	<beans:beans xmlns="http://www.springframework.org/schema/security" -->
<!-- 	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" -->
<!-- 	xsi:schemaLocation="http://www.springframework.org/schema/beans -->
<!-- 	http://www.springframework.org/schema/beans/spring-beans.xsd -->
<!-- 	http://www.springframework.org/schema/security -->
<!-- 	http://www.springframework.org/schema/security/spring-security.xsd"> -->
	
	

	<!-- enable use-expressions -->
	<!-- <http auto-config="true" use-expressions="true"> -->
	<http create-session="ifRequired" use-expressions="true">
		<custom-filter before="HEADERS_FILTER" ref="myFilter" />
		<headers defaults-disabled="true">
			<content-security-policy policy-directives="default-src  'self';
	 			script-src  'self'  'nonce-{nonce}' ; 
				style-src 'self' 'nonce-{nonce}' ; 
				object-src 'none'; base-uri 'self';
	 			connect-src 'self';
	 			frame-ancestors 'none';
	  			font-src 'self';
	  			 frame-src 'self'; 
	  			img-src  'self' data: ; 
	  			manifest-src 'self'; media-src 'self';" /><!-- nonce-{nonce} unsafe-inline -->
			<cache-control />
		</headers>
		<session-management invalid-session-url="/login?logout" session-fixation-protection="migrateSession">
  		 	<concurrency-control max-sessions="2" error-if-maximum-exceeded="true" expired-url="/login?logout"/> 
  		</session-management>
		<intercept-url pattern="/admin/js/**" access="permitAll" />
		<intercept-url pattern="/login/**" access="permitAll" />
		<intercept-url pattern="/dandelion/**" access="permitAll" />
		<!-- <intercept-url pattern="/welcome**" access="hasRole('ADMIN')" /> -->
		<form-login login-page="/login" 
		    default-target-url="/admin/dashboard"
			authentication-failure-url="/login?error" 
			username-parameter="username"
			password-parameter="password" 
			login-processing-url="/auth/login_check" 
		authentication-success-handler-ref="mysuccessHandler" />
        
		<logout  invalidate-session="true" logout-success-url="/login?logout" delete-cookies="JSESSIONID" />
		<csrf />
	</http>

	<beans:bean id="mysuccessHandler" class="com.controller.login.redirectLogin"/>
	<beans:bean id="myFilter" class="com.controller.login.CSPNonceFilter"/>
	<!-- Select users and user_roles from database -->
	<authentication-manager>
	    <authentication-provider>
		    <password-encoder ref="encoder" />
			<jdbc-user-service data-source-ref="dataSource"
				users-by-username-query="select username,password, enabled from logininformation where username=?"
				authorities-by-username-query="SELECT 
				logininformation.username,
				role 
				FROM userroleinformation 
					INNER JOIN logininformation on userroleinformation.user_id = logininformation.userid 
					LEFT Outer join roleinformation on userroleinformation.role_id=roleinformation.role_id where logininformation.username =?" />
		</authentication-provider>
	</authentication-manager>
	
	

	
 
	<beans:bean id="encoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder">
		<beans:constructor-arg name="strength" value="10" />
	</beans:bean>
	
	<beans:bean id="UserAttemptsDAO" class="com.dao.login.UserAttemptsDAOImpl"></beans:bean>
	<beans:bean id="UserLoginDAO" class="com.dao.login.UserLoginDAOImpl"></beans:bean> 
</beans:beans>